def main():

  % returns 'X' or 'O' for winner, 'D' for draw, '>' for in progress
  def char board_status(char[] board):
    int i
    if board[0] = board[1] and board[1] = board[2] and board[0] <> ' ':
      return board[0]
    elsif board[3] = board[4] and board[4] = board[5] and board[3] <> ' ':
      return board[3]
    elsif board[6] = board[7] and board[7] = board[8] and board[7] <> ' ':
      return board[6]
    elsif board[0] = board[3] and board[3] = board[6] and board[0] <> ' ':
      return board[0]
    elsif board[1] = board[4] and board[4] = board[7] and board[1] <> ' ':
      return board[1]
    elsif board[2] = board[5] and board[5] = board[8] and board[2] <> ' ':
      return board[2]
    elsif board[0] = board[4] and board[4] = board[9] and board[0] <> ' ':
      return board[0]
    elsif board[2] = board[4] and board[4] = board[6] and board[0] <> ' ':
      return board[2]
    else:
      for i:=0; i<9; i:=i+1:
        if board[i] = ' ': return '>' end
      end
      return 'D'
    end
  end


  def char[] make_board():
    char[] board
    int i
    
    board := new char[9]
    for i:=0; i<9; i:=i+1:
      board[i] := ' '
    end
    return board
  end
  
  
  def print_board(char[] board):
    int i, j
    
    for i:=0; i<3; i:=i+1:
      puts("-------------\n| ")
      for j:=0; j<3; j:=j+1:
        putc(board[i * 3 + j])
        puts(" | ")
      end
      putc('\n')
    end
    puts("-------------\n")
  end
  
  
  def get_move(char player; char[] board):
    int move
    
    puts("Player \'")
    putc(player)
    puts("\' choose square (1-9): ")
    
    move := geti() - 1
    for skip; true; skip:
      if move < 9 and board[move] = ' ':
        board[move] := player
        puts("Player \'")
        putc(player)
        puts("\' chose cell: (")
        puti(move / 3)
        puts(", ")
        puti(move mod 3)
        puts(")\n")
        exit
      end
      puts("Invalid move, try again: ")
      move := geti() - 1
    end
  end
  
  
  def next(ref char player):
    if player = 'X':
      player := 'O'
      exit
    end
    player := 'X'
  end
  
  
  def clear_screen():
    puts("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
  end
  

  def play():
    char[] board
    char player, status, d
    
    board := make_board()
    player := 'X'
    
    clear_screen()
    puts("Welcome to the game, enter any character to start: ")
    d := getc()
    for skip; true; skip:
      clear_screen()
      print_board(board)
      get_move(player, board)
      status := board_status(board)
      
      if status = 'X' or status = 'O':
        clear_screen()
        print_board(board)
        puts("Player \'")
        putc(status)
        puts("\' Won!\n")
        exit
      elsif status = 'D':
        puts("Game was a draw\n")
        exit
      end
      next(player)
    end
  end


  play()
  
end
