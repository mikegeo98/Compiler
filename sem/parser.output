Terminals unused in grammar

    T_LPAR
    T_RPAR
    T_LBR
    T_RBR
    T_COMMA
    T_ANKA
    T_SEMI


Grammar

    0 $accept: program $end

    1 program: func-def

    2 func-def: "def" header ':' rule0 "end"

    3 rule0: rule1 rule2

    4 rule1: func-def rule1
    5      | func-decl rule1
    6      | var-def rule1
    7      | %empty

    8 rule2: stmt
    9      | stmt rule2

   10 header: type T_ID '(' rule35 ')'
   11       | type T_ID '(' ')'
   12       | T_ID '(' rule35 ')'
   13       | T_ID '(' ')'

   14 rule35: formal rule3

   15 rule3: ';' formal rule3
   16      | %empty

   17 formal: "ref" type T_ID rule4
   18       | type T_ID rule4

   19 rule4: ',' T_ID rule4
   20      | %empty

   21 type: "int"
   22     | "bool"
   23     | "char"
   24     | type '[' ']'
   25     | "list" '[' type ']'

   26 func-decl: "decl" header

   27 var-def: type T_ID rule4

   28 stmt: simple
   29     | "exit"
   30     | "return" expr
   31     | "if" expr ':' rule2 "end"
   32     | "if" expr ':' rule2 rule5 "else" ':' rule2 "end"
   33     | "for" simplelist ';' expr ';' simplelist ':' rule2 "end"

   34 rule5: "elsif" expr ':' rule2 rule5
   35      | %empty

   36 simple: "skip"
   37       | atom ":=" expr
   38       | call

   39 simplelist: simple rule6

   40 call: T_ID '(' expr rule7 ')'
   41     | T_ID '(' ')'

   42 rule6: ',' simple rule6
   43      | %empty

   44 rule7: ',' expr rule7
   45      | %empty

   46 atom: T_ID
   47     | T_STRING
   48     | atom '[' expr ']'
   49     | call

   50 expr: atom
   51     | T_CONST
   52     | T_CONCHAR
   53     | '(' expr ')'
   54     | '+' expr
   55     | '-' expr
   56     | expr '+' expr
   57     | expr '-' expr
   58     | expr '*' expr
   59     | expr '/' expr
   60     | expr T_MOD expr
   61     | expr '=' expr
   62     | expr T_NEQUAL expr
   63     | expr '<' expr
   64     | expr '>' expr
   65     | expr T_SOE expr
   66     | expr T_GOE expr
   67     | "true"
   68     | "false"
   69     | T_NOT expr
   70     | expr T_AND expr
   71     | expr T_OR expr
   72     | "new" type '[' expr ']'
   73     | "nil"
   74     | "nil?" '(' expr ')'
   75     | expr '#' expr
   76     | "head" '(' expr ')'
   77     | "tail" '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '#' <op> (35) 75
    '(' <op> (40) 10 11 12 13 40 41 53 74 76 77
    ')' <op> (41) 10 11 12 13 40 41 53 74 76 77
    '*' <op> (42) 58
    '+' <op> (43) 54 56
    ',' <op> (44) 19 42 44
    '-' <op> (45) 55 57
    '/' <op> (47) 59
    ':' <op> (58) 2 31 32 33 34
    ';' <op> (59) 15 33
    '<' <op> (60) 63
    '=' <op> (61) 61
    '>' <op> (62) 64
    '[' <op> (91) 24 25 48 72
    ']' <op> (93) 24 25 48 72
    error (256)
    T_AND <op> (258) 70
    T_OR <op> (259) 71
    T_NOT <op> (260) 69
    T_MOD <op> (261) 60
    "bool" (262) 22
    "char" (263) 23
    "int" (264) 21
    "list" (265) 25
    "new" (266) 72
    "nil" <op> (267) 73
    "nil?" <var> (268) 74
    "tail" <var> (269) 77
    "head" <var> (270) 76
    "decl" (271) 26
    "def" (272) 2
    "ref" (273) 17
    "return" (274) 30
    "for" (275) 33
    "exit" (276) 29
    "if" (277) 31 32
    "else" (278) 32
    "elsif" (279) 34
    "end" (280) 2 31 32 33
    "skip" (281) 36
    "true" <Bool> (282) 67
    "false" <Bool> (283) 68
    T_ID <var> (284) 10 11 12 13 17 18 19 27 40 41 46
    T_CONST <num> (285) 51
    T_STRING <str> (286) 47
    T_CONCHAR <chr> (287) 52
    ":=" <op> (288) 37
    T_LPAR <op> (289)
    T_RPAR <op> (290)
    T_LBR <op> (291)
    T_RBR <op> (292)
    T_COMMA <op> (293)
    T_ANKA <op> (294)
    T_SEMI <op> (295)
    T_NEQUAL <op> (296) 62
    T_SOE <op> (297) 65
    T_GOE <op> (298) 66


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    program <fundecl> (60)
        on left: 1
        on right: 0
    func-def <fundecl> (61)
        on left: 2
        on right: 1 4
    rule0 <block> (62)
        on left: 3
        on right: 2
    rule1 <block> (63)
        on left: 4 5 6 7
        on right: 3 4 5 6
    rule2 <block> (64)
        on left: 8 9
        on right: 3 9 31 32 33 34
    header <fundecl> (65)
        on left: 10 11 12 13
        on right: 2 26
    rule35 <varlist> (66)
        on left: 14
        on right: 10 12
    rule3 <varlist> (67)
        on left: 15 16
        on right: 14 15
    formal <varlist> (68)
        on left: 17 18
        on right: 14 15
    rule4 <varlist> (69)
        on left: 19 20
        on right: 17 18 19 27
    type <type> (70)
        on left: 21 22 23 24 25
        on right: 10 11 17 18 24 25 27 72
    func-decl <fundecl> (71)
        on left: 26
        on right: 5
    var-def <varlist> (72)
        on left: 27
        on right: 6
    stmt <stmt> (73)
        on left: 28 29 30 31 32 33
        on right: 8 9
    rule5 <elsif> (74)
        on left: 34 35
        on right: 32 34
    simple <stmt> (75)
        on left: 36 37 38
        on right: 28 39 42
    simplelist <block> (76)
        on left: 39
        on right: 33
    call <funcal> (77)
        on left: 40 41
        on right: 38 49
    rule6 <block> (78)
        on left: 42 43
        on right: 39 42
    rule7 <expls> (79)
        on left: 44 45
        on right: 40 44
    atom <atom> (80)
        on left: 46 47 48 49
        on right: 37 48 50
    expr <expr> (81)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
        on right: 30 31 32 33 34 37 40 44 48 53 54 55 56 57 58 59 60 61 62 63 64 65 66 69 70 71 72 74 75 76 77


State 0

    0 $accept: . program $end

    "def"  shift, and go to state 1

    program   go to state 2
    func-def  go to state 3


State 1

    2 func-def: "def" . header ':' rule0 "end"

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    T_ID    shift, and go to state 8

    header  go to state 9
    type    go to state 10


State 2

    0 $accept: program . $end

    $end  shift, and go to state 11


State 3

    1 program: func-def .

    $default  reduce using rule 1 (program)


State 4

   22 type: "bool" .

    $default  reduce using rule 22 (type)


State 5

   23 type: "char" .

    $default  reduce using rule 23 (type)


State 6

   21 type: "int" .

    $default  reduce using rule 21 (type)


State 7

   25 type: "list" . '[' type ']'

    '['  shift, and go to state 12


State 8

   12 header: T_ID . '(' rule35 ')'
   13       | T_ID . '(' ')'

    '('  shift, and go to state 13


State 9

    2 func-def: "def" header . ':' rule0 "end"

    ':'  shift, and go to state 14


State 10

   10 header: type . T_ID '(' rule35 ')'
   11       | type . T_ID '(' ')'
   24 type: type . '[' ']'

    T_ID  shift, and go to state 15
    '['   shift, and go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

   25 type: "list" '[' . type ']'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    type  go to state 17


State 13

   12 header: T_ID '(' . rule35 ')'
   13       | T_ID '(' . ')'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18
    ')'     shift, and go to state 19

    rule35  go to state 20
    formal  go to state 21
    type    go to state 22


State 14

    2 func-def: "def" header ':' . rule0 "end"

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "decl"  shift, and go to state 23
    "def"   shift, and go to state 1

    $default  reduce using rule 7 (rule1)

    func-def   go to state 24
    rule0      go to state 25
    rule1      go to state 26
    type       go to state 27
    func-decl  go to state 28
    var-def    go to state 29


State 15

   10 header: type T_ID . '(' rule35 ')'
   11       | type T_ID . '(' ')'

    '('  shift, and go to state 30


State 16

   24 type: type '[' . ']'

    ']'  shift, and go to state 31


State 17

   24 type: type . '[' ']'
   25     | "list" '[' type . ']'

    '['  shift, and go to state 16
    ']'  shift, and go to state 32


State 18

   17 formal: "ref" . type T_ID rule4

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    type  go to state 33


State 19

   13 header: T_ID '(' ')' .

    $default  reduce using rule 13 (header)


State 20

   12 header: T_ID '(' rule35 . ')'

    ')'  shift, and go to state 34


State 21

   14 rule35: formal . rule3

    ';'  shift, and go to state 35

    $default  reduce using rule 16 (rule3)

    rule3  go to state 36


State 22

   18 formal: type . T_ID rule4
   24 type: type . '[' ']'

    T_ID  shift, and go to state 37
    '['   shift, and go to state 16


State 23

   26 func-decl: "decl" . header

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    T_ID    shift, and go to state 8

    header  go to state 38
    type    go to state 10


State 24

    4 rule1: func-def . rule1

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "decl"  shift, and go to state 23
    "def"   shift, and go to state 1

    $default  reduce using rule 7 (rule1)

    func-def   go to state 24
    rule1      go to state 39
    type       go to state 27
    func-decl  go to state 28
    var-def    go to state 29


State 25

    2 func-def: "def" header ':' rule0 . "end"

    "end"  shift, and go to state 40


State 26

    3 rule0: rule1 . rule2

    "return"  shift, and go to state 41
    "for"     shift, and go to state 42
    "exit"    shift, and go to state 43
    "if"      shift, and go to state 44
    "skip"    shift, and go to state 45
    T_ID      shift, and go to state 46
    T_STRING  shift, and go to state 47

    rule2   go to state 48
    stmt    go to state 49
    simple  go to state 50
    call    go to state 51
    atom    go to state 52


State 27

   24 type: type . '[' ']'
   27 var-def: type . T_ID rule4

    T_ID  shift, and go to state 53
    '['   shift, and go to state 16


State 28

    5 rule1: func-decl . rule1

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "decl"  shift, and go to state 23
    "def"   shift, and go to state 1

    $default  reduce using rule 7 (rule1)

    func-def   go to state 24
    rule1      go to state 54
    type       go to state 27
    func-decl  go to state 28
    var-def    go to state 29


State 29

    6 rule1: var-def . rule1

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "decl"  shift, and go to state 23
    "def"   shift, and go to state 1

    $default  reduce using rule 7 (rule1)

    func-def   go to state 24
    rule1      go to state 55
    type       go to state 27
    func-decl  go to state 28
    var-def    go to state 29


State 30

   10 header: type T_ID '(' . rule35 ')'
   11       | type T_ID '(' . ')'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18
    ')'     shift, and go to state 56

    rule35  go to state 57
    formal  go to state 21
    type    go to state 22


State 31

   24 type: type '[' ']' .

    $default  reduce using rule 24 (type)


State 32

   25 type: "list" '[' type ']' .

    $default  reduce using rule 25 (type)


State 33

   17 formal: "ref" type . T_ID rule4
   24 type: type . '[' ']'

    T_ID  shift, and go to state 58
    '['   shift, and go to state 16


State 34

   12 header: T_ID '(' rule35 ')' .

    $default  reduce using rule 12 (header)


State 35

   15 rule3: ';' . formal rule3

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18

    formal  go to state 59
    type    go to state 22


State 36

   14 rule35: formal rule3 .

    $default  reduce using rule 14 (rule35)


State 37

   18 formal: type T_ID . rule4

    ','  shift, and go to state 60

    $default  reduce using rule 20 (rule4)

    rule4  go to state 61


State 38

   26 func-decl: "decl" header .

    $default  reduce using rule 26 (func-decl)


State 39

    4 rule1: func-def rule1 .

    $default  reduce using rule 4 (rule1)


State 40

    2 func-def: "def" header ':' rule0 "end" .

    $default  reduce using rule 2 (func-def)


State 41

   30 stmt: "return" . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 77


State 42

   33 stmt: "for" . simplelist ';' expr ';' simplelist ':' rule2 "end"

    "skip"    shift, and go to state 45
    T_ID      shift, and go to state 46
    T_STRING  shift, and go to state 47

    simple      go to state 78
    simplelist  go to state 79
    call        go to state 51
    atom        go to state 52


State 43

   29 stmt: "exit" .

    $default  reduce using rule 29 (stmt)


State 44

   31 stmt: "if" . expr ':' rule2 "end"
   32     | "if" . expr ':' rule2 rule5 "else" ':' rule2 "end"

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 80


State 45

   36 simple: "skip" .

    $default  reduce using rule 36 (simple)


State 46

   40 call: T_ID . '(' expr rule7 ')'
   41     | T_ID . '(' ')'
   46 atom: T_ID .

    '('  shift, and go to state 81

    $default  reduce using rule 46 (atom)


State 47

   47 atom: T_STRING .

    $default  reduce using rule 47 (atom)


State 48

    3 rule0: rule1 rule2 .

    $default  reduce using rule 3 (rule0)


State 49

    8 rule2: stmt .
    9      | stmt . rule2

    "return"  shift, and go to state 41
    "for"     shift, and go to state 42
    "exit"    shift, and go to state 43
    "if"      shift, and go to state 44
    "skip"    shift, and go to state 45
    T_ID      shift, and go to state 46
    T_STRING  shift, and go to state 47

    $default  reduce using rule 8 (rule2)

    rule2   go to state 82
    stmt    go to state 49
    simple  go to state 50
    call    go to state 51
    atom    go to state 52


State 50

   28 stmt: simple .

    $default  reduce using rule 28 (stmt)


State 51

   38 simple: call .
   49 atom: call .

    ":="      reduce using rule 49 (atom)
    '['       reduce using rule 49 (atom)
    $default  reduce using rule 38 (simple)


State 52

   37 simple: atom . ":=" expr
   48 atom: atom . '[' expr ']'

    ":="  shift, and go to state 83
    '['   shift, and go to state 84


State 53

   27 var-def: type T_ID . rule4

    ','  shift, and go to state 60

    $default  reduce using rule 20 (rule4)

    rule4  go to state 85


State 54

    5 rule1: func-decl rule1 .

    $default  reduce using rule 5 (rule1)


State 55

    6 rule1: var-def rule1 .

    $default  reduce using rule 6 (rule1)


State 56

   11 header: type T_ID '(' ')' .

    $default  reduce using rule 11 (header)


State 57

   10 header: type T_ID '(' rule35 . ')'

    ')'  shift, and go to state 86


State 58

   17 formal: "ref" type T_ID . rule4

    ','  shift, and go to state 60

    $default  reduce using rule 20 (rule4)

    rule4  go to state 87


State 59

   15 rule3: ';' formal . rule3

    ';'  shift, and go to state 35

    $default  reduce using rule 16 (rule3)

    rule3  go to state 88


State 60

   19 rule4: ',' . T_ID rule4

    T_ID  shift, and go to state 89


State 61

   18 formal: type T_ID rule4 .

    $default  reduce using rule 18 (formal)


State 62

   69 expr: T_NOT . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 90


State 63

   72 expr: "new" . type '[' expr ']'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    type  go to state 91


State 64

   73 expr: "nil" .

    $default  reduce using rule 73 (expr)


State 65

   74 expr: "nil?" . '(' expr ')'

    '('  shift, and go to state 92


State 66

   77 expr: "tail" . '(' expr ')'

    '('  shift, and go to state 93


State 67

   76 expr: "head" . '(' expr ')'

    '('  shift, and go to state 94


State 68

   67 expr: "true" .

    $default  reduce using rule 67 (expr)


State 69

   68 expr: "false" .

    $default  reduce using rule 68 (expr)


State 70

   51 expr: T_CONST .

    $default  reduce using rule 51 (expr)


State 71

   52 expr: T_CONCHAR .

    $default  reduce using rule 52 (expr)


State 72

   53 expr: '(' . expr ')'

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 95


State 73

   54 expr: '+' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 96


State 74

   55 expr: '-' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 97


State 75

   49 atom: call .

    $default  reduce using rule 49 (atom)


State 76

   48 atom: atom . '[' expr ']'
   50 expr: atom .

    '['  shift, and go to state 84

    $default  reduce using rule 50 (expr)


State 77

   30 stmt: "return" expr .
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111

    $default  reduce using rule 30 (stmt)


State 78

   39 simplelist: simple . rule6

    ','  shift, and go to state 112

    $default  reduce using rule 43 (rule6)

    rule6  go to state 113


State 79

   33 stmt: "for" simplelist . ';' expr ';' simplelist ':' rule2 "end"

    ';'  shift, and go to state 114


State 80

   31 stmt: "if" expr . ':' rule2 "end"
   32     | "if" expr . ':' rule2 rule5 "else" ':' rule2 "end"
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ':'       shift, and go to state 115
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111


State 81

   40 call: T_ID '(' . expr rule7 ')'
   41     | T_ID '(' . ')'

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    ')'        shift, and go to state 116
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 117


State 82

    9 rule2: stmt rule2 .

    $default  reduce using rule 9 (rule2)


State 83

   37 simple: atom ":=" . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 118


State 84

   48 atom: atom '[' . expr ']'

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 119


State 85

   27 var-def: type T_ID rule4 .

    $default  reduce using rule 27 (var-def)


State 86

   10 header: type T_ID '(' rule35 ')' .

    $default  reduce using rule 10 (header)


State 87

   17 formal: "ref" type T_ID rule4 .

    $default  reduce using rule 17 (formal)


State 88

   15 rule3: ';' formal rule3 .

    $default  reduce using rule 15 (rule3)


State 89

   19 rule4: ',' T_ID . rule4

    ','  shift, and go to state 60

    $default  reduce using rule 20 (rule4)

    rule4  go to state 120


State 90

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   69     | T_NOT expr .
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD     shift, and go to state 100
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111

    $default  reduce using rule 69 (expr)


State 91

   24 type: type . '[' ']'
   72 expr: "new" type . '[' expr ']'

    '['  shift, and go to state 121


State 92

   74 expr: "nil?" '(' . expr ')'

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 122


State 93

   77 expr: "tail" '(' . expr ')'

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 123


State 94

   76 expr: "head" '(' . expr ')'

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 124


State 95

   53 expr: '(' expr . ')'
   56     | expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ')'       shift, and go to state 125
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111


State 96

   54 expr: '+' expr .
   56     | expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 54 (expr)


State 97

   55 expr: '-' expr .
   56     | expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 55 (expr)


State 98

   70 expr: expr T_AND . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 126


State 99

   71 expr: expr T_OR . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 127


State 100

   60 expr: expr T_MOD . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 128


State 101

   61 expr: expr '=' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 129


State 102

   62 expr: expr T_NEQUAL . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 130


State 103

   64 expr: expr '>' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 131


State 104

   63 expr: expr '<' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 132


State 105

   65 expr: expr T_SOE . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 133


State 106

   66 expr: expr T_GOE . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 134


State 107

   75 expr: expr '#' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 135


State 108

   56 expr: expr '+' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 136


State 109

   57 expr: expr '-' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 137


State 110

   58 expr: expr '*' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 138


State 111

   59 expr: expr '/' . expr

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 139


State 112

   42 rule6: ',' . simple rule6

    "skip"    shift, and go to state 45
    T_ID      shift, and go to state 46
    T_STRING  shift, and go to state 47

    simple  go to state 140
    call    go to state 51
    atom    go to state 52


State 113

   39 simplelist: simple rule6 .

    $default  reduce using rule 39 (simplelist)


State 114

   33 stmt: "for" simplelist ';' . expr ';' simplelist ':' rule2 "end"

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 141


State 115

   31 stmt: "if" expr ':' . rule2 "end"
   32     | "if" expr ':' . rule2 rule5 "else" ':' rule2 "end"

    "return"  shift, and go to state 41
    "for"     shift, and go to state 42
    "exit"    shift, and go to state 43
    "if"      shift, and go to state 44
    "skip"    shift, and go to state 45
    T_ID      shift, and go to state 46
    T_STRING  shift, and go to state 47

    rule2   go to state 142
    stmt    go to state 49
    simple  go to state 50
    call    go to state 51
    atom    go to state 52


State 116

   41 call: T_ID '(' ')' .

    $default  reduce using rule 41 (call)


State 117

   40 call: T_ID '(' expr . rule7 ')'
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ','       shift, and go to state 143
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111

    $default  reduce using rule 45 (rule7)

    rule7  go to state 144


State 118

   37 simple: atom ":=" expr .
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111

    $default  reduce using rule 37 (simple)


State 119

   48 atom: atom '[' expr . ']'
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ']'       shift, and go to state 145
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111


State 120

   19 rule4: ',' T_ID rule4 .

    $default  reduce using rule 19 (rule4)


State 121

   24 type: type '[' . ']'
   72 expr: "new" type '[' . expr ']'

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    ']'        shift, and go to state 31
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 146


State 122

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   74     | "nil?" '(' expr . ')'
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ')'       shift, and go to state 147
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111


State 123

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr
   77     | "tail" '(' expr . ')'

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ')'       shift, and go to state 148
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111


State 124

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr
   76     | "head" '(' expr . ')'

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ')'       shift, and go to state 149
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111


State 125

   53 expr: '(' expr ')' .

    $default  reduce using rule 53 (expr)


State 126

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   70     | expr T_AND expr .
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD     shift, and go to state 100
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111

    $default  reduce using rule 70 (expr)


State 127

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   71     | expr T_OR expr .
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_MOD     shift, and go to state 100
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111

    $default  reduce using rule 71 (expr)


State 128

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   60     | expr T_MOD expr .
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    $default  reduce using rule 60 (expr)


State 129

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   61     | expr '=' expr .
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    '='       error (nonassociative)
    T_NEQUAL  error (nonassociative)
    '>'       error (nonassociative)
    '<'       error (nonassociative)
    T_SOE     error (nonassociative)
    T_GOE     error (nonassociative)

    $default  reduce using rule 61 (expr)


State 130

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   62     | expr T_NEQUAL expr .
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    '='       error (nonassociative)
    T_NEQUAL  error (nonassociative)
    '>'       error (nonassociative)
    '<'       error (nonassociative)
    T_SOE     error (nonassociative)
    T_GOE     error (nonassociative)

    $default  reduce using rule 62 (expr)


State 131

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   64     | expr '>' expr .
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    '='       error (nonassociative)
    T_NEQUAL  error (nonassociative)
    '>'       error (nonassociative)
    '<'       error (nonassociative)
    T_SOE     error (nonassociative)
    T_GOE     error (nonassociative)

    $default  reduce using rule 64 (expr)


State 132

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   63     | expr '<' expr .
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    '='       error (nonassociative)
    T_NEQUAL  error (nonassociative)
    '>'       error (nonassociative)
    '<'       error (nonassociative)
    T_SOE     error (nonassociative)
    T_GOE     error (nonassociative)

    $default  reduce using rule 63 (expr)


State 133

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   65     | expr T_SOE expr .
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    '='       error (nonassociative)
    T_NEQUAL  error (nonassociative)
    '>'       error (nonassociative)
    '<'       error (nonassociative)
    T_SOE     error (nonassociative)
    T_GOE     error (nonassociative)

    $default  reduce using rule 65 (expr)


State 134

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   66     | expr T_GOE expr .
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    '='       error (nonassociative)
    T_NEQUAL  error (nonassociative)
    '>'       error (nonassociative)
    '<'       error (nonassociative)
    T_SOE     error (nonassociative)
    T_GOE     error (nonassociative)

    $default  reduce using rule 66 (expr)


State 135

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr
   75     | expr '#' expr .

    T_MOD  shift, and go to state 100
    '#'    shift, and go to state 107
    '+'    shift, and go to state 108
    '-'    shift, and go to state 109
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 75 (expr)


State 136

   56 expr: expr . '+' expr
   56     | expr '+' expr .
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 56 (expr)


State 137

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   57     | expr '-' expr .
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_MOD  shift, and go to state 100
    '*'    shift, and go to state 110
    '/'    shift, and go to state 111

    $default  reduce using rule 57 (expr)


State 138

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   58     | expr '*' expr .
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    $default  reduce using rule 58 (expr)


State 139

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   59     | expr '/' expr .
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    $default  reduce using rule 59 (expr)


State 140

   42 rule6: ',' simple . rule6

    ','  shift, and go to state 112

    $default  reduce using rule 43 (rule6)

    rule6  go to state 150


State 141

   33 stmt: "for" simplelist ';' expr . ';' simplelist ':' rule2 "end"
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ';'       shift, and go to state 151
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111


State 142

   31 stmt: "if" expr ':' rule2 . "end"
   32     | "if" expr ':' rule2 . rule5 "else" ':' rule2 "end"

    "elsif"  shift, and go to state 152
    "end"    shift, and go to state 153

    $default  reduce using rule 35 (rule5)

    rule5  go to state 154


State 143

   44 rule7: ',' . expr rule7

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 155


State 144

   40 call: T_ID '(' expr rule7 . ')'

    ')'  shift, and go to state 156


State 145

   48 atom: atom '[' expr ']' .

    $default  reduce using rule 48 (atom)


State 146

   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   72     | "new" type '[' expr . ']'
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ']'       shift, and go to state 157
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111


State 147

   74 expr: "nil?" '(' expr ')' .

    $default  reduce using rule 74 (expr)


State 148

   77 expr: "tail" '(' expr ')' .

    $default  reduce using rule 77 (expr)


State 149

   76 expr: "head" '(' expr ')' .

    $default  reduce using rule 76 (expr)


State 150

   42 rule6: ',' simple rule6 .

    $default  reduce using rule 42 (rule6)


State 151

   33 stmt: "for" simplelist ';' expr ';' . simplelist ':' rule2 "end"

    "skip"    shift, and go to state 45
    T_ID      shift, and go to state 46
    T_STRING  shift, and go to state 47

    simple      go to state 78
    simplelist  go to state 158
    call        go to state 51
    atom        go to state 52


State 152

   34 rule5: "elsif" . expr ':' rule2 rule5

    T_NOT      shift, and go to state 62
    "new"      shift, and go to state 63
    "nil"      shift, and go to state 64
    "nil?"     shift, and go to state 65
    "tail"     shift, and go to state 66
    "head"     shift, and go to state 67
    "true"     shift, and go to state 68
    "false"    shift, and go to state 69
    T_ID       shift, and go to state 46
    T_CONST    shift, and go to state 70
    T_STRING   shift, and go to state 47
    T_CONCHAR  shift, and go to state 71
    '('        shift, and go to state 72
    '+'        shift, and go to state 73
    '-'        shift, and go to state 74

    call  go to state 75
    atom  go to state 76
    expr  go to state 159


State 153

   31 stmt: "if" expr ':' rule2 "end" .

    $default  reduce using rule 31 (stmt)


State 154

   32 stmt: "if" expr ':' rule2 rule5 . "else" ':' rule2 "end"

    "else"  shift, and go to state 160


State 155

   44 rule7: ',' expr . rule7
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ','       shift, and go to state 143
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111

    $default  reduce using rule 45 (rule7)

    rule7  go to state 161


State 156

   40 call: T_ID '(' expr rule7 ')' .

    $default  reduce using rule 40 (call)


State 157

   72 expr: "new" type '[' expr ']' .

    $default  reduce using rule 72 (expr)


State 158

   33 stmt: "for" simplelist ';' expr ';' simplelist . ':' rule2 "end"

    ':'  shift, and go to state 162


State 159

   34 rule5: "elsif" expr . ':' rule2 rule5
   56 expr: expr . '+' expr
   57     | expr . '-' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . T_MOD expr
   61     | expr . '=' expr
   62     | expr . T_NEQUAL expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_SOE expr
   66     | expr . T_GOE expr
   70     | expr . T_AND expr
   71     | expr . T_OR expr
   75     | expr . '#' expr

    T_AND     shift, and go to state 98
    T_OR      shift, and go to state 99
    T_MOD     shift, and go to state 100
    ':'       shift, and go to state 163
    '='       shift, and go to state 101
    T_NEQUAL  shift, and go to state 102
    '>'       shift, and go to state 103
    '<'       shift, and go to state 104
    T_SOE     shift, and go to state 105
    T_GOE     shift, and go to state 106
    '#'       shift, and go to state 107
    '+'       shift, and go to state 108
    '-'       shift, and go to state 109
    '*'       shift, and go to state 110
    '/'       shift, and go to state 111


State 160

   32 stmt: "if" expr ':' rule2 rule5 "else" . ':' rule2 "end"

    ':'  shift, and go to state 164


State 161

   44 rule7: ',' expr rule7 .

    $default  reduce using rule 44 (rule7)


State 162

   33 stmt: "for" simplelist ';' expr ';' simplelist ':' . rule2 "end"

    "return"  shift, and go to state 41
    "for"     shift, and go to state 42
    "exit"    shift, and go to state 43
    "if"      shift, and go to state 44
    "skip"    shift, and go to state 45
    T_ID      shift, and go to state 46
    T_STRING  shift, and go to state 47

    rule2   go to state 165
    stmt    go to state 49
    simple  go to state 50
    call    go to state 51
    atom    go to state 52


State 163

   34 rule5: "elsif" expr ':' . rule2 rule5

    "return"  shift, and go to state 41
    "for"     shift, and go to state 42
    "exit"    shift, and go to state 43
    "if"      shift, and go to state 44
    "skip"    shift, and go to state 45
    T_ID      shift, and go to state 46
    T_STRING  shift, and go to state 47

    rule2   go to state 166
    stmt    go to state 49
    simple  go to state 50
    call    go to state 51
    atom    go to state 52


State 164

   32 stmt: "if" expr ':' rule2 rule5 "else" ':' . rule2 "end"

    "return"  shift, and go to state 41
    "for"     shift, and go to state 42
    "exit"    shift, and go to state 43
    "if"      shift, and go to state 44
    "skip"    shift, and go to state 45
    T_ID      shift, and go to state 46
    T_STRING  shift, and go to state 47

    rule2   go to state 167
    stmt    go to state 49
    simple  go to state 50
    call    go to state 51
    atom    go to state 52


State 165

   33 stmt: "for" simplelist ';' expr ';' simplelist ':' rule2 . "end"

    "end"  shift, and go to state 168


State 166

   34 rule5: "elsif" expr ':' rule2 . rule5

    "elsif"  shift, and go to state 152

    $default  reduce using rule 35 (rule5)

    rule5  go to state 169


State 167

   32 stmt: "if" expr ':' rule2 rule5 "else" ':' rule2 . "end"

    "end"  shift, and go to state 170


State 168

   33 stmt: "for" simplelist ';' expr ';' simplelist ':' rule2 "end" .

    $default  reduce using rule 33 (stmt)


State 169

   34 rule5: "elsif" expr ':' rule2 rule5 .

    $default  reduce using rule 34 (rule5)


State 170

   32 stmt: "if" expr ':' rule2 rule5 "else" ':' rule2 "end" .

    $default  reduce using rule 32 (stmt)
