Terminals unused in grammar

    T_LPAR
    T_RPAR
    T_LBR
    T_RBR
    T_COMMA
    T_ANKA
    T_SEMI


Grammar

    0 $accept: program $end

    1 program: func-def

    2 func-def: "def" header ':' rule1 rule2 "end"

    3 rule1: func-def rule1
    4      | func-decl rule1
    5      | var-def rule1
    6      | %empty

    7 rule2: stmt
    8      | stmt rule2

    9 header: type T_ID '(' formal rule3 ')'
   10       | type T_ID '(' ')'
   11       | T_ID '(' formal rule3 ')'
   12       | T_ID '(' ')'

   13 rule3: ';' formal rule3
   14      | %empty

   15 formal: "ref" type T_ID rule4
   16       | type T_ID rule4

   17 rule4: ',' T_ID rule4
   18      | %empty

   19 type: "int"
   20     | "bool"
   21     | "char"
   22     | type '[' ']'
   23     | "list" '[' type ']'

   24 func-decl: "decl" header

   25 var-def: type T_ID rule4

   26 stmt: simple
   27     | "exit"
   28     | "return" expr
   29     | "if" expr ':' rule2 "end"
   30     | "if" expr ':' rule2 rule5 "else" ':' rule2 "end"
   31     | "for" simplelist ';' expr ';' simplelist ':' rule2 "end"

   32 rule5: "elsif" expr ':' rule2 rule5
   33      | %empty

   34 simple: "skip"
   35       | atom ":=" expr
   36       | call

   37 simplelist: simple rule6

   38 call: T_ID '(' expr rule7 ')'
   39     | T_ID '(' ')'

   40 rule6: ',' simple rule6
   41      | %empty

   42 rule7: ',' expr rule7
   43      | %empty

   44 atom: T_ID
   45     | T_STRING
   46     | atom '[' expr ']'
   47     | call

   48 expr: atom
   49     | T_CONST
   50     | T_CONCHAR
   51     | '(' expr ')'
   52     | '+' expr
   53     | '-' expr
   54     | expr '+' expr
   55     | expr '-' expr
   56     | expr '*' expr
   57     | expr '/' expr
   58     | expr T_MOD expr
   59     | expr '=' expr
   60     | expr "<>" expr
   61     | expr '<' expr
   62     | expr '>' expr
   63     | expr "<=" expr
   64     | expr ">=" expr
   65     | "true"
   66     | "false"
   67     | T_NOT expr
   68     | expr T_AND expr
   69     | expr T_OR expr
   70     | "new" type '[' expr ']'
   71     | "nil"
   72     | "nil?" '(' expr ')'
   73     | expr '#' expr
   74     | "head" '(' expr ')'
   75     | "tail" '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 73
    '(' (40) 9 10 11 12 38 39 51 72 74 75
    ')' (41) 9 10 11 12 38 39 51 72 74 75
    '*' (42) 56
    '+' (43) 52 54
    ',' (44) 17 40 42
    '-' (45) 53 55
    '/' (47) 57
    ':' (58) 2 29 30 31 32
    ';' (59) 13 31
    '<' (60) 61
    '=' (61) 59
    '>' (62) 62
    '[' (91) 22 23 46 70
    ']' (93) 22 23 46 70
    error (256)
    T_AND (258) 68
    T_OR (259) 69
    T_NOT (260) 67
    T_MOD (261) 58
    "bool" (262) 20
    "char" (263) 21
    "int" (264) 19
    "list" (265) 23
    "new" (266) 70
    "nil" (267) 71
    "nil?" (268) 72
    "tail" (269) 75
    "head" (270) 74
    "decl" (271) 24
    "def" (272) 2
    "ref" (273) 15
    "return" (274) 28
    "for" (275) 31
    "exit" (276) 27
    "if" (277) 29 30
    "else" (278) 30
    "elsif" (279) 32
    "end" (280) 2 29 30 31
    "skip" (281) 34
    "true" (282) 65
    "false" (283) 66
    T_ID (284) 9 10 11 12 15 16 17 25 38 39 44
    T_CONST (285) 49
    T_STRING (286) 45
    T_CONCHAR (287) 50
    "<>" (288) 60
    "<=" (289) 63
    ">=" (290) 64
    ":=" (291) 35
    T_LPAR (292)
    T_RPAR (293)
    T_LBR (294)
    T_RBR (295)
    T_COMMA (296)
    T_ANKA (297)
    T_SEMI (298)


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    program (60)
        on left: 1
        on right: 0
    func-def (61)
        on left: 2
        on right: 1 3
    rule1 (62)
        on left: 3 4 5 6
        on right: 2 3 4 5
    rule2 (63)
        on left: 7 8
        on right: 2 8 29 30 31 32
    header (64)
        on left: 9 10 11 12
        on right: 2 24
    rule3 (65)
        on left: 13 14
        on right: 9 11 13
    formal (66)
        on left: 15 16
        on right: 9 11 13
    rule4 (67)
        on left: 17 18
        on right: 15 16 17 25
    type (68)
        on left: 19 20 21 22 23
        on right: 9 10 15 16 22 23 25 70
    func-decl (69)
        on left: 24
        on right: 4
    var-def (70)
        on left: 25
        on right: 5
    stmt (71)
        on left: 26 27 28 29 30 31
        on right: 7 8
    rule5 (72)
        on left: 32 33
        on right: 30 32
    simple (73)
        on left: 34 35 36
        on right: 26 37 40
    simplelist (74)
        on left: 37
        on right: 31
    call (75)
        on left: 38 39
        on right: 36 47
    rule6 (76)
        on left: 40 41
        on right: 37 40
    rule7 (77)
        on left: 42 43
        on right: 38 42
    atom (78)
        on left: 44 45 46 47
        on right: 35 46 48
    expr (79)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
        on right: 28 29 30 31 32 35 38 42 46 51 52 53 54 55 56 57 58 59 60 61 62 63 64 67 68 69 70 72 73 74 75


State 0

    0 $accept: . program $end

    "def"  shift, and go to state 1

    program   go to state 2
    func-def  go to state 3


State 1

    2 func-def: "def" . header ':' rule1 rule2 "end"

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    T_ID    shift, and go to state 8

    header  go to state 9
    type    go to state 10


State 2

    0 $accept: program . $end

    $end  shift, and go to state 11


State 3

    1 program: func-def .

    $default  reduce using rule 1 (program)


State 4

   20 type: "bool" .

    $default  reduce using rule 20 (type)


State 5

   21 type: "char" .

    $default  reduce using rule 21 (type)


State 6

   19 type: "int" .

    $default  reduce using rule 19 (type)


State 7

   23 type: "list" . '[' type ']'

    '['  shift, and go to state 12


State 8

   11 header: T_ID . '(' formal rule3 ')'
   12       | T_ID . '(' ')'

    '('  shift, and go to state 13


State 9

    2 func-def: "def" header . ':' rule1 rule2 "end"

    ':'  shift, and go to state 14


State 10

    9 header: type . T_ID '(' formal rule3 ')'
   10       | type . T_ID '(' ')'
   22 type: type . '[' ']'

    T_ID  shift, and go to state 15
    '['   shift, and go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

   23 type: "list" '[' . type ']'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    type  go to state 17


State 13

   11 header: T_ID '(' . formal rule3 ')'
   12       | T_ID '(' . ')'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18
    ')'     shift, and go to state 19

    formal  go to state 20
    type    go to state 21


State 14

    2 func-def: "def" header ':' . rule1 rule2 "end"

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "decl"  shift, and go to state 22
    "def"   shift, and go to state 1

    $default  reduce using rule 6 (rule1)

    func-def   go to state 23
    rule1      go to state 24
    type       go to state 25
    func-decl  go to state 26
    var-def    go to state 27


State 15

    9 header: type T_ID . '(' formal rule3 ')'
   10       | type T_ID . '(' ')'

    '('  shift, and go to state 28


State 16

   22 type: type '[' . ']'

    ']'  shift, and go to state 29


State 17

   22 type: type . '[' ']'
   23     | "list" '[' type . ']'

    '['  shift, and go to state 16
    ']'  shift, and go to state 30


State 18

   15 formal: "ref" . type T_ID rule4

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    type  go to state 31


State 19

   12 header: T_ID '(' ')' .

    $default  reduce using rule 12 (header)


State 20

   11 header: T_ID '(' formal . rule3 ')'

    ';'  shift, and go to state 32

    $default  reduce using rule 14 (rule3)

    rule3  go to state 33


State 21

   16 formal: type . T_ID rule4
   22 type: type . '[' ']'

    T_ID  shift, and go to state 34
    '['   shift, and go to state 16


State 22

   24 func-decl: "decl" . header

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    T_ID    shift, and go to state 8

    header  go to state 35
    type    go to state 10


State 23

    3 rule1: func-def . rule1

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "decl"  shift, and go to state 22
    "def"   shift, and go to state 1

    $default  reduce using rule 6 (rule1)

    func-def   go to state 23
    rule1      go to state 36
    type       go to state 25
    func-decl  go to state 26
    var-def    go to state 27


State 24

    2 func-def: "def" header ':' rule1 . rule2 "end"

    "return"  shift, and go to state 37
    "for"     shift, and go to state 38
    "exit"    shift, and go to state 39
    "if"      shift, and go to state 40
    "skip"    shift, and go to state 41
    T_ID      shift, and go to state 42
    T_STRING  shift, and go to state 43

    rule2   go to state 44
    stmt    go to state 45
    simple  go to state 46
    call    go to state 47
    atom    go to state 48


State 25

   22 type: type . '[' ']'
   25 var-def: type . T_ID rule4

    T_ID  shift, and go to state 49
    '['   shift, and go to state 16


State 26

    4 rule1: func-decl . rule1

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "decl"  shift, and go to state 22
    "def"   shift, and go to state 1

    $default  reduce using rule 6 (rule1)

    func-def   go to state 23
    rule1      go to state 50
    type       go to state 25
    func-decl  go to state 26
    var-def    go to state 27


State 27

    5 rule1: var-def . rule1

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "decl"  shift, and go to state 22
    "def"   shift, and go to state 1

    $default  reduce using rule 6 (rule1)

    func-def   go to state 23
    rule1      go to state 51
    type       go to state 25
    func-decl  go to state 26
    var-def    go to state 27


State 28

    9 header: type T_ID '(' . formal rule3 ')'
   10       | type T_ID '(' . ')'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18
    ')'     shift, and go to state 52

    formal  go to state 53
    type    go to state 21


State 29

   22 type: type '[' ']' .

    $default  reduce using rule 22 (type)


State 30

   23 type: "list" '[' type ']' .

    $default  reduce using rule 23 (type)


State 31

   15 formal: "ref" type . T_ID rule4
   22 type: type . '[' ']'

    T_ID  shift, and go to state 54
    '['   shift, and go to state 16


State 32

   13 rule3: ';' . formal rule3

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7
    "ref"   shift, and go to state 18

    formal  go to state 55
    type    go to state 21


State 33

   11 header: T_ID '(' formal rule3 . ')'

    ')'  shift, and go to state 56


State 34

   16 formal: type T_ID . rule4

    ','  shift, and go to state 57

    $default  reduce using rule 18 (rule4)

    rule4  go to state 58


State 35

   24 func-decl: "decl" header .

    $default  reduce using rule 24 (func-decl)


State 36

    3 rule1: func-def rule1 .

    $default  reduce using rule 3 (rule1)


State 37

   28 stmt: "return" . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 74


State 38

   31 stmt: "for" . simplelist ';' expr ';' simplelist ':' rule2 "end"

    "skip"    shift, and go to state 41
    T_ID      shift, and go to state 42
    T_STRING  shift, and go to state 43

    simple      go to state 75
    simplelist  go to state 76
    call        go to state 47
    atom        go to state 48


State 39

   27 stmt: "exit" .

    $default  reduce using rule 27 (stmt)


State 40

   29 stmt: "if" . expr ':' rule2 "end"
   30     | "if" . expr ':' rule2 rule5 "else" ':' rule2 "end"

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 77


State 41

   34 simple: "skip" .

    $default  reduce using rule 34 (simple)


State 42

   38 call: T_ID . '(' expr rule7 ')'
   39     | T_ID . '(' ')'
   44 atom: T_ID .

    '('  shift, and go to state 78

    $default  reduce using rule 44 (atom)


State 43

   45 atom: T_STRING .

    $default  reduce using rule 45 (atom)


State 44

    2 func-def: "def" header ':' rule1 rule2 . "end"

    "end"  shift, and go to state 79


State 45

    7 rule2: stmt .
    8      | stmt . rule2

    "return"  shift, and go to state 37
    "for"     shift, and go to state 38
    "exit"    shift, and go to state 39
    "if"      shift, and go to state 40
    "skip"    shift, and go to state 41
    T_ID      shift, and go to state 42
    T_STRING  shift, and go to state 43

    $default  reduce using rule 7 (rule2)

    rule2   go to state 80
    stmt    go to state 45
    simple  go to state 46
    call    go to state 47
    atom    go to state 48


State 46

   26 stmt: simple .

    $default  reduce using rule 26 (stmt)


State 47

   36 simple: call .
   47 atom: call .

    ":="      reduce using rule 47 (atom)
    '['       reduce using rule 47 (atom)
    $default  reduce using rule 36 (simple)


State 48

   35 simple: atom . ":=" expr
   46 atom: atom . '[' expr ']'

    ":="  shift, and go to state 81
    '['   shift, and go to state 82


State 49

   25 var-def: type T_ID . rule4

    ','  shift, and go to state 57

    $default  reduce using rule 18 (rule4)

    rule4  go to state 83


State 50

    4 rule1: func-decl rule1 .

    $default  reduce using rule 4 (rule1)


State 51

    5 rule1: var-def rule1 .

    $default  reduce using rule 5 (rule1)


State 52

   10 header: type T_ID '(' ')' .

    $default  reduce using rule 10 (header)


State 53

    9 header: type T_ID '(' formal . rule3 ')'

    ';'  shift, and go to state 32

    $default  reduce using rule 14 (rule3)

    rule3  go to state 84


State 54

   15 formal: "ref" type T_ID . rule4

    ','  shift, and go to state 57

    $default  reduce using rule 18 (rule4)

    rule4  go to state 85


State 55

   13 rule3: ';' formal . rule3

    ';'  shift, and go to state 32

    $default  reduce using rule 14 (rule3)

    rule3  go to state 86


State 56

   11 header: T_ID '(' formal rule3 ')' .

    $default  reduce using rule 11 (header)


State 57

   17 rule4: ',' . T_ID rule4

    T_ID  shift, and go to state 87


State 58

   16 formal: type T_ID rule4 .

    $default  reduce using rule 16 (formal)


State 59

   67 expr: T_NOT . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 88


State 60

   70 expr: "new" . type '[' expr ']'

    "bool"  shift, and go to state 4
    "char"  shift, and go to state 5
    "int"   shift, and go to state 6
    "list"  shift, and go to state 7

    type  go to state 89


State 61

   71 expr: "nil" .

    $default  reduce using rule 71 (expr)


State 62

   72 expr: "nil?" . '(' expr ')'

    '('  shift, and go to state 90


State 63

   75 expr: "tail" . '(' expr ')'

    '('  shift, and go to state 91


State 64

   74 expr: "head" . '(' expr ')'

    '('  shift, and go to state 92


State 65

   65 expr: "true" .

    $default  reduce using rule 65 (expr)


State 66

   66 expr: "false" .

    $default  reduce using rule 66 (expr)


State 67

   49 expr: T_CONST .

    $default  reduce using rule 49 (expr)


State 68

   50 expr: T_CONCHAR .

    $default  reduce using rule 50 (expr)


State 69

   51 expr: '(' . expr ')'

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 93


State 70

   52 expr: '+' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 94


State 71

   53 expr: '-' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 95


State 72

   47 atom: call .

    $default  reduce using rule 47 (atom)


State 73

   46 atom: atom . '[' expr ']'
   48 expr: atom .

    '['  shift, and go to state 82

    $default  reduce using rule 48 (expr)


State 74

   28 stmt: "return" expr .
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 28 (stmt)


State 75

   37 simplelist: simple . rule6

    ','  shift, and go to state 110

    $default  reduce using rule 41 (rule6)

    rule6  go to state 111


State 76

   31 stmt: "for" simplelist . ';' expr ';' simplelist ':' rule2 "end"

    ';'  shift, and go to state 112


State 77

   29 stmt: "if" expr . ':' rule2 "end"
   30     | "if" expr . ':' rule2 rule5 "else" ':' rule2 "end"
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ':'    shift, and go to state 113
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109


State 78

   38 call: T_ID '(' . expr rule7 ')'
   39     | T_ID '(' . ')'

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    ')'        shift, and go to state 114
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 115


State 79

    2 func-def: "def" header ':' rule1 rule2 "end" .

    $default  reduce using rule 2 (func-def)


State 80

    8 rule2: stmt rule2 .

    $default  reduce using rule 8 (rule2)


State 81

   35 simple: atom ":=" . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 116


State 82

   46 atom: atom '[' . expr ']'

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 117


State 83

   25 var-def: type T_ID rule4 .

    $default  reduce using rule 25 (var-def)


State 84

    9 header: type T_ID '(' formal rule3 . ')'

    ')'  shift, and go to state 118


State 85

   15 formal: "ref" type T_ID rule4 .

    $default  reduce using rule 15 (formal)


State 86

   13 rule3: ';' formal rule3 .

    $default  reduce using rule 13 (rule3)


State 87

   17 rule4: ',' T_ID . rule4

    ','  shift, and go to state 57

    $default  reduce using rule 18 (rule4)

    rule4  go to state 119


State 88

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   67     | T_NOT expr .
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 67 (expr)


State 89

   22 type: type . '[' ']'
   70 expr: "new" type . '[' expr ']'

    '['  shift, and go to state 120


State 90

   72 expr: "nil?" '(' . expr ')'

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 121


State 91

   75 expr: "tail" '(' . expr ')'

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 122


State 92

   74 expr: "head" '(' . expr ')'

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 123


State 93

   51 expr: '(' expr . ')'
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ')'    shift, and go to state 124
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109


State 94

   52 expr: '+' expr .
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 52 (expr)


State 95

   53 expr: '-' expr .
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 53 (expr)


State 96

   68 expr: expr T_AND . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 125


State 97

   69 expr: expr T_OR . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 126


State 98

   58 expr: expr T_MOD . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 127


State 99

   60 expr: expr "<>" . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 128


State 100

   63 expr: expr "<=" . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 129


State 101

   64 expr: expr ">=" . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 130


State 102

   59 expr: expr '=' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 131


State 103

   62 expr: expr '>' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 132


State 104

   61 expr: expr '<' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 133


State 105

   73 expr: expr '#' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 134


State 106

   54 expr: expr '+' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 135


State 107

   55 expr: expr '-' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 136


State 108

   56 expr: expr '*' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 137


State 109

   57 expr: expr '/' . expr

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 138


State 110

   40 rule6: ',' . simple rule6

    "skip"    shift, and go to state 41
    T_ID      shift, and go to state 42
    T_STRING  shift, and go to state 43

    simple  go to state 139
    call    go to state 47
    atom    go to state 48


State 111

   37 simplelist: simple rule6 .

    $default  reduce using rule 37 (simplelist)


State 112

   31 stmt: "for" simplelist ';' . expr ';' simplelist ':' rule2 "end"

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 140


State 113

   29 stmt: "if" expr ':' . rule2 "end"
   30     | "if" expr ':' . rule2 rule5 "else" ':' rule2 "end"

    "return"  shift, and go to state 37
    "for"     shift, and go to state 38
    "exit"    shift, and go to state 39
    "if"      shift, and go to state 40
    "skip"    shift, and go to state 41
    T_ID      shift, and go to state 42
    T_STRING  shift, and go to state 43

    rule2   go to state 141
    stmt    go to state 45
    simple  go to state 46
    call    go to state 47
    atom    go to state 48


State 114

   39 call: T_ID '(' ')' .

    $default  reduce using rule 39 (call)


State 115

   38 call: T_ID '(' expr . rule7 ')'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ','    shift, and go to state 142
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 43 (rule7)

    rule7  go to state 143


State 116

   35 simple: atom ":=" expr .
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 35 (simple)


State 117

   46 atom: atom '[' expr . ']'
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ']'    shift, and go to state 144
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109


State 118

    9 header: type T_ID '(' formal rule3 ')' .

    $default  reduce using rule 9 (header)


State 119

   17 rule4: ',' T_ID rule4 .

    $default  reduce using rule 17 (rule4)


State 120

   22 type: type '[' . ']'
   70 expr: "new" type '[' . expr ']'

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    ']'        shift, and go to state 29
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 145


State 121

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   72     | "nil?" '(' expr . ')'
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ')'    shift, and go to state 146
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109


State 122

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr
   75     | "tail" '(' expr . ')'

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ')'    shift, and go to state 147
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109


State 123

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr
   74     | "head" '(' expr . ')'

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ')'    shift, and go to state 148
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109


State 124

   51 expr: '(' expr ')' .

    $default  reduce using rule 51 (expr)


State 125

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   68     | expr T_AND expr .
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 68 (expr)


State 126

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   69     | expr T_OR expr .
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 69 (expr)


State 127

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   58     | expr T_MOD expr .
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    $default  reduce using rule 58 (expr)


State 128

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   60     | expr "<>" expr .
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 60 (expr)


State 129

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   63     | expr "<=" expr .
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 63 (expr)


State 130

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   64     | expr ">=" expr .
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 64 (expr)


State 131

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   59     | expr '=' expr .
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 59 (expr)


State 132

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   62     | expr '>' expr .
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 62 (expr)


State 133

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   61     | expr '<' expr .
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 61 (expr)


State 134

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr
   73     | expr '#' expr .

    T_MOD  shift, and go to state 98
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 73 (expr)


State 135

   54 expr: expr . '+' expr
   54     | expr '+' expr .
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 54 (expr)


State 136

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   55     | expr '-' expr .
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_MOD  shift, and go to state 98
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 55 (expr)


State 137

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   56     | expr '*' expr .
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    $default  reduce using rule 56 (expr)


State 138

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   57     | expr '/' expr .
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    $default  reduce using rule 57 (expr)


State 139

   40 rule6: ',' simple . rule6

    ','  shift, and go to state 110

    $default  reduce using rule 41 (rule6)

    rule6  go to state 149


State 140

   31 stmt: "for" simplelist ';' expr . ';' simplelist ':' rule2 "end"
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ';'    shift, and go to state 150
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109


State 141

   29 stmt: "if" expr ':' rule2 . "end"
   30     | "if" expr ':' rule2 . rule5 "else" ':' rule2 "end"

    "elsif"  shift, and go to state 151
    "end"    shift, and go to state 152

    $default  reduce using rule 33 (rule5)

    rule5  go to state 153


State 142

   42 rule7: ',' . expr rule7

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 154


State 143

   38 call: T_ID '(' expr rule7 . ')'

    ')'  shift, and go to state 155


State 144

   46 atom: atom '[' expr ']' .

    $default  reduce using rule 46 (atom)


State 145

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   70     | "new" type '[' expr . ']'
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ']'    shift, and go to state 156
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109


State 146

   72 expr: "nil?" '(' expr ')' .

    $default  reduce using rule 72 (expr)


State 147

   75 expr: "tail" '(' expr ')' .

    $default  reduce using rule 75 (expr)


State 148

   74 expr: "head" '(' expr ')' .

    $default  reduce using rule 74 (expr)


State 149

   40 rule6: ',' simple rule6 .

    $default  reduce using rule 40 (rule6)


State 150

   31 stmt: "for" simplelist ';' expr ';' . simplelist ':' rule2 "end"

    "skip"    shift, and go to state 41
    T_ID      shift, and go to state 42
    T_STRING  shift, and go to state 43

    simple      go to state 75
    simplelist  go to state 157
    call        go to state 47
    atom        go to state 48


State 151

   32 rule5: "elsif" . expr ':' rule2 rule5

    T_NOT      shift, and go to state 59
    "new"      shift, and go to state 60
    "nil"      shift, and go to state 61
    "nil?"     shift, and go to state 62
    "tail"     shift, and go to state 63
    "head"     shift, and go to state 64
    "true"     shift, and go to state 65
    "false"    shift, and go to state 66
    T_ID       shift, and go to state 42
    T_CONST    shift, and go to state 67
    T_STRING   shift, and go to state 43
    T_CONCHAR  shift, and go to state 68
    '('        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71

    call  go to state 72
    atom  go to state 73
    expr  go to state 158


State 152

   29 stmt: "if" expr ':' rule2 "end" .

    $default  reduce using rule 29 (stmt)


State 153

   30 stmt: "if" expr ':' rule2 rule5 . "else" ':' rule2 "end"

    "else"  shift, and go to state 159


State 154

   42 rule7: ',' expr . rule7
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ','    shift, and go to state 142
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109

    $default  reduce using rule 43 (rule7)

    rule7  go to state 160


State 155

   38 call: T_ID '(' expr rule7 ')' .

    $default  reduce using rule 38 (call)


State 156

   70 expr: "new" type '[' expr ']' .

    $default  reduce using rule 70 (expr)


State 157

   31 stmt: "for" simplelist ';' expr ';' simplelist . ':' rule2 "end"

    ':'  shift, and go to state 161


State 158

   32 rule5: "elsif" expr . ':' rule2 rule5
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . T_MOD expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   68     | expr . T_AND expr
   69     | expr . T_OR expr
   73     | expr . '#' expr

    T_AND  shift, and go to state 96
    T_OR   shift, and go to state 97
    T_MOD  shift, and go to state 98
    "<>"   shift, and go to state 99
    "<="   shift, and go to state 100
    ">="   shift, and go to state 101
    ':'    shift, and go to state 162
    '='    shift, and go to state 102
    '>'    shift, and go to state 103
    '<'    shift, and go to state 104
    '#'    shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    '*'    shift, and go to state 108
    '/'    shift, and go to state 109


State 159

   30 stmt: "if" expr ':' rule2 rule5 "else" . ':' rule2 "end"

    ':'  shift, and go to state 163


State 160

   42 rule7: ',' expr rule7 .

    $default  reduce using rule 42 (rule7)


State 161

   31 stmt: "for" simplelist ';' expr ';' simplelist ':' . rule2 "end"

    "return"  shift, and go to state 37
    "for"     shift, and go to state 38
    "exit"    shift, and go to state 39
    "if"      shift, and go to state 40
    "skip"    shift, and go to state 41
    T_ID      shift, and go to state 42
    T_STRING  shift, and go to state 43

    rule2   go to state 164
    stmt    go to state 45
    simple  go to state 46
    call    go to state 47
    atom    go to state 48


State 162

   32 rule5: "elsif" expr ':' . rule2 rule5

    "return"  shift, and go to state 37
    "for"     shift, and go to state 38
    "exit"    shift, and go to state 39
    "if"      shift, and go to state 40
    "skip"    shift, and go to state 41
    T_ID      shift, and go to state 42
    T_STRING  shift, and go to state 43

    rule2   go to state 165
    stmt    go to state 45
    simple  go to state 46
    call    go to state 47
    atom    go to state 48


State 163

   30 stmt: "if" expr ':' rule2 rule5 "else" ':' . rule2 "end"

    "return"  shift, and go to state 37
    "for"     shift, and go to state 38
    "exit"    shift, and go to state 39
    "if"      shift, and go to state 40
    "skip"    shift, and go to state 41
    T_ID      shift, and go to state 42
    T_STRING  shift, and go to state 43

    rule2   go to state 166
    stmt    go to state 45
    simple  go to state 46
    call    go to state 47
    atom    go to state 48


State 164

   31 stmt: "for" simplelist ';' expr ';' simplelist ':' rule2 . "end"

    "end"  shift, and go to state 167


State 165

   32 rule5: "elsif" expr ':' rule2 . rule5

    "elsif"  shift, and go to state 151

    $default  reduce using rule 33 (rule5)

    rule5  go to state 168


State 166

   30 stmt: "if" expr ':' rule2 rule5 "else" ':' rule2 . "end"

    "end"  shift, and go to state 169


State 167

   31 stmt: "for" simplelist ';' expr ';' simplelist ':' rule2 "end" .

    $default  reduce using rule 31 (stmt)


State 168

   32 rule5: "elsif" expr ':' rule2 rule5 .

    $default  reduce using rule 32 (rule5)


State 169

   30 stmt: "if" expr ':' rule2 rule5 "else" ':' rule2 "end" .

    $default  reduce using rule 30 (stmt)
